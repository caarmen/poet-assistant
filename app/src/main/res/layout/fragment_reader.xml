<!--
  ~ Copyright (c) 2016-2017 Carmen Alvarez
  ~
  ~ This file is part of Poet Assistant.
  ~
  ~ Poet Assistant is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ Poet Assistant is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with Poet Assistant.  If not, see <http://www.gnu.org/licenses/>.
  -->

<layout xmlns:android="http://schemas.android.com/apk/res/android"
        xmlns:app="http://schemas.android.com/apk/res-auto"
        xmlns:tools="http://schemas.android.com/tools">

    <data>
        <import type="android.view.View"/>
        <variable
            name="viewModel"
            type="ca.rmen.android.poetassistant.main.reader.ReaderViewModel"/>
    </data>

    <ScrollView
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:clipChildren="false"
        android:clipToPadding="false"
        android:paddingBottom="@dimen/activity_vertical_margin"
        android:paddingLeft="@dimen/activity_horizontal_margin"
        android:paddingRight="@dimen/activity_horizontal_margin"
        android:paddingTop="@dimen/activity_vertical_margin">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical">

            <android.support.design.widget.FloatingActionButton
                android:id="@+id/btn_play"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_gravity="center_horizontal"
                android:contentDescription="@string/tts_play"
                android:onClick="@{v -> viewModel.onPlayButtonClicked()}"
                app:enabled="@{viewModel.playButtonEnabled}"
                app:srcCompat="@{viewModel.playButtonDrawable}"/>

            <ca.rmen.android.poetassistant.widget.CABEditText
                android:id="@+id/tv_text"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_gravity="center"
                app:charSequence="@={viewModel.poemSelection}"
                android:hint="@string/tts_hint"
                android:text="@={viewModel.poem}"/>

            <TextView
                android:id="@+id/reader_word_count"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="@{@plurals/reader_word_count(viewModel.wordCount, viewModel.wordCount)}"
                android:textColor="?android:attr/textColorSecondary"
                android:visibility="@{viewModel.wordCountVisible ? View.VISIBLE: View.GONE}"
                tools:text="45 words"/>
        </LinearLayout>
    </ScrollView>
</layout>
